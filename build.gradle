plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'blue.onedu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.18.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'

	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor'com.querydsl:querydsl-apt:5.1.0:jakarta'

	annotationProcessor 'org.projectlombok:lombok'

	testRuntimeOnly 'com.h2database:h2'
	testImplementation 'org.locationtech.proj4j:proj4j:1.1.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// 자동생성될 Querydsl Code 경로 설정
// 지역변수
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

// Java 코드에서 접근 가능하게 설정
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

// 설정 연결
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// clean 시 Generate 도 같이 삭제되도록
clean.doLast {
	file(querydslDir).deleteDir()
}